{"version":3,"sources":["serviceWorker.js","authguard/auth.js","authguard/protected.route.js","components/header/Nav.js","components/home/OnlineList/OnlineCard.js","components/home/OnlineList/List.js","helpers/urlFor.js","lib/Flash.js","components/home/MessageList/MsgList.js","components/home/SendMessage/SendMsg.js","components/home/index.js","components/login/login.js","index.js"],"names":["Boolean","window","location","hostname","match","this","authenticated","cb","token","console","log","localStorage","setItem","getItem","ProtectedRoute","Component","component","rest","render","props","auth","isAuthenticated","to","pathname","state","from","Nav","className","onClick","logout","reload","OnlineCard","online_user","id","first_name","username","List","cards","online_users","map","index","key","JSON","parse","urlFor","endpoint","Flash","setTimeout","resetError","error","MsgList","getMessage","messageList","message","SendMsg","addEmoji","e","emoji","native","setState","showEmoji","k","document","getElementById","style","display","messageSubmit","bind","handleChange","event","obj","currentTarget","name","value","sendMessage","position","top","right","onSelect","onChange","rows","placeholder","axios","interceptors","request","use","config","headers","Promise","reject","socket","Home","sendMsg","send","stringify","get","then","res","data","catch","self","WebSocket","addEventListener","push","l","scrollTo","scrollHeight","login","history","password","confirm_pwd","usernameLogin","passwordLogin","handleSubmit","handleLoginSubmit","preventDefault","post","alert","response","classList","remove","add","test","marginTop","href","openLoginForm","openRegisterForm","role","type","ref","onKeyPress","firstMethod","maxLength","pattern","onSubmit","secondMethod","rootElement","ReactDOM","exact","path","home","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2b1a0a3a.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","class Auth {\n    constructor() {\n      this.authenticated = false;\n    }\n  \n    login(cb,token) {\n      console.log(token)\n      window.localStorage.setItem(\"isLoggedIn\",true);\n      window.localStorage.setItem(\"token\",token);\n      this.authenticated = true;\n      cb();\n    }\n  \n    logout(cb) {\n      window.localStorage.setItem(\"isLoggedIn\",false);\n      window.localStorage.setItem(\"token\",null);\n      this.authenticated = false;\n      cb();\n    }\n  \n    isAuthenticated() {\n  \n      if(!window.localStorage.getItem(\"isLoggedIn\"))\n        return false;\n      \n      if(window.localStorage.getItem(\"isLoggedIn\")==\"false\")\n        return false;\n      else\n        return true;\n    }\n    getToken(){\n      return window.localStorage.getItem(\"token\");\n    }\n  }\n  \n  export default new Auth();","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport auth from \"./auth\";\n\nexport const ProtectedRoute = ({\n  component: Component,\n  ...rest\n}) => {\n  return (\n    <Route\n      {...rest}\n      render={props => {\n        if (auth.isAuthenticated()) {\n          return <Component {...props} />;\n        } else {\n          return (\n            <Redirect\n              to={{\n                pathname: \"/\",\n                state: {\n                  from: props.location\n                }\n              }}\n            />\n          );\n        }\n      }}\n    />\n  );\n};","import React, { Component } from 'react';\n        // <div className=\"nav-button\" onClick={() => toggleNote()} >\n        //   { showNote ? 'Cancel' :  '+ Note' }\n        // </div> \n\nimport auth from './../../authguard/auth';\nclass Nav extends Component {\n  render() {\n    return (\n      <div className=\"nav-container\">\n        <div className=\"nav-logo\">Chat App</div>\n        <div className=\"nav-button\" onClick={() => auth.logout(()=>{\n            window.location.reload();\n        })} >\n          { auth.isAuthenticated() ? 'Logout' :  'Sign In' }\n        </div> \n      </div>\n    );\n  }\n}\n\nexport default Nav;\n","import React, { Component } from 'react';\nimport './online-card.css';\n\nclass OnlineCard extends Component {\n\n  render() {\n    const { online_user } = this.props;\n    return(\n      <div className=\"conversation btn\">\n        <div className=\"media-body\">\n          <h5 className=\"media-heading\" id=\"contactName\">{online_user.first_name}</h5>\n          <h5 className=\"media-heading\" id=\"contactName\">{online_user.username}</h5>\n            <small className=\"pull-right time\">Online</small>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default OnlineCard;","import React, { Component } from 'react';\nimport OnlineCard from './OnlineCard';\n\nclass List extends Component {\n \n  render() {\n    const { online_users } = this.props;\n\n    const cards = online_users.map((username, index) => {\n      return (\n        <OnlineCard\n          key={index}\n          index={index}\n          online_user={JSON.parse(username)}\n        />\n      );\n    });\n\n    return (\n      <div className=\"row content-wrap\">\n        {cards}\n      </div>\n    );\n  }\n}\n\nexport default List;","const urlFor = (endpoint) => {\n return `https://chatingbunny.herokuapp.com/api/chat/${endpoint}`;\n};\n\nexport default urlFor;","import React, { Component } from 'react';\n\nclass Flash extends Component {\n  componentDidMount() {\n    setTimeout(() => {\n      this.props.resetError();\n    }, 2000);\n  }\n\n  render() {\n    const { error } = this.props;\n    return (\n      <div className=\"flash-container\">\n        {error} \n      </div>\n    );\n  }\n}\n\nexport default Flash;","import React, { Component } from 'react';\n\nclass MsgList extends Component {\n  componentWillMount() {    \n    this.props.getMessage();\n  }\n\n  render() {\n    const { messageList } = this.props;\n    const cards = messageList.map((message, index) => {\n      return (\n        <div className=\"msg\" key={index}>\n          <div className=\"media-body\">\n            <small className=\"pull-right time\"><i className=\"fa fa-clock-o\"></i></small>\n              <h5 className=\"media-heading\">{message.first_name} &nbsp; ({message.username})</h5>\n              <small className=\"col-sm-11\">{message.message}</small>\n          </div>\n        </div>      \n      );\n    });\n\n    return (\n      <div className=\"row content-wrap messages\" id=\"autoscroll\"> \n        {cards}\n      </div>\n    );\n  }\n}\n\nexport default MsgList;","import React, { Component } from 'react';\nimport 'emoji-mart/css/emoji-mart.css'\nimport { Picker } from 'emoji-mart'\n\nclass SendMsg extends Component {\n\n  constructor(props) {\n      super(props);\n    \n      this.state = {\"message\":\"\"};\n      this.messageSubmit = this.messageSubmit.bind(this);\n      this.handleChange = this.handleChange.bind(this);\n    }\n  \n  handleChange(event) {\n    let obj={}\n    obj[event.currentTarget.name]=event.currentTarget.value;\n    this.setState(obj);\n  }\n  \n  messageSubmit(){\n    this.props.sendMessage(this.state.message)\n    this.setState({\"message\":\"\"})\n  }\n\n  addEmoji = (e) => {\n      let emoji = e.native;\n      this.setState({\n        message: this.state.message + emoji\n      })\n  }\n  \n  showEmoji = () =>{\n    let k=document.getElementById(\"show\")\n    if(k.style.display==\"none\")\n      k.style.display=\"block\"\n    else\n      k.style.display=\"none\"\n\n  }\n  \n  render() {\n    return (\n      <div className=\"row send-wrap\">\n        <div id=\"show\" style={{display:\"none\",position:\"absolute\",top:\"5%\",right:\"0%\"}}>\n           <Picker onSelect={this.addEmoji} />\n        </div>\n        <div className=\"send-message\">\n          <div className=\"message-text\">\n            <textarea name=\"message\" onChange={this.handleChange} value={this.state.message} className=\"no-resize-bar form-control\" rows=\"2\" placeholder=\"Write a message...\"></textarea>\n          </div>\n          <div className=\"send-button\">\n            <a className=\"btn\" onClick={this.messageSubmit}>Send <i className=\"fa fa-send\"></i></a>\n            <button onClick={this.showEmoji}>Emoji</button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SendMsg;","import React, { Component } from 'react';\nimport './index.css';\nimport Nav from './../header/Nav.js';\nimport OnlineList from './OnlineList/List';\nimport axios from 'axios';\nimport urlFor from './../../helpers/urlFor';\nimport Flash from './../../lib/Flash';\nimport MessageList from './MessageList/MsgList';\nimport SendMessage from './SendMessage/SendMsg';\nimport openSocket from 'socket.io-client';\n\naxios.interceptors.request.use((config) => {\n let token=window.localStorage.getItem(\"token\")\n  if (token) {\n    config.headers['authorization'] = 'Token ' + token;\n  }\n  return config;\n}, (error) => {\n  return Promise.reject(error);\n});\n\nlet socket=null;\n\nclass Home extends Component {\n  constructor() {\n    super();\n    this.state = {\n      online_users:[],\n      error: '',\n      messageList:[]\n    };\n  }\n\n  componentWillMount() {\n    let self=this;\n    socket=new WebSocket('wss://chatingbunny.herokuapp.com/ws/chat/all/');\n    socket.addEventListener('open', function (event) {\n        socket.send(JSON.stringify({\"type\":\"online_users\",\"token\":window.localStorage.getItem(\"token\")}));\n    });\n\n    // Listen for messages\n    socket.addEventListener('message', function (event) {\n        let res=JSON.parse(event.data)\n        if(res[\"handle_type\"]===\"message\"){\n          let messageList=self.state.messageList;\n          messageList.push(res)\n          self.setState({\"messageList\":messageList},\n            ()=>{\n                let l=window.document.getElementById(\"autoscroll\") \n                l.scrollTo(0,l.scrollHeight)   \n            })\n        }\n        else{\n            self.setState(res)\n        }\n    });  \n  }\n\n  sendMsg= (value)=> {\n      socket.send(JSON.stringify({\"type\":\"message\",\"token\":window.localStorage.getItem(\"token\"),\"message\":value}));\n  }\n\n  getMessage = () =>{\n    axios\n    .get(urlFor(\"ListMessage/\"))\n    .then(res => {\n        this.setState({\"messageList\":res.data})\n      })\n    .catch(res=>{\n      this.setState({ error:\"Something Went Wrong..\" });\n    });   \n  }   \n\n  resetError = () => {\n    this.setState({ error: '' });\n  }\n\n  render() {\n    const { error } = this.state;\n\n    return (\n      <div className=\"App\">\n        <Nav/>\n        {error && <Flash error={error} resetError={this.resetError} />}\n        <br />\n        <div className=\"container fill\">\n          <div className=\"row chat-wrap\">\n            <div className=\"col-sm-3 panel-wrap\">\n              <div className=\"col-sm-12 section-wrap\">\n                <div className=\"row header-wrap\">\n                    <div className=\"chat-header col-sm-12\">\n                        <h4 id=\"username\">Online Users</h4>\n                    </div>\n                </div>\n                <OnlineList \n                  online_users={this.state.online_users}\n                />\n              </div>\n            </div>\n            <div className=\"col-sm-9 panel-wrap\">\n              <div className=\"col-sm-12 section-wrap\" id=\"Messages\">\n                <div className=\"row header-wrap\">\n                    <div className=\"chat-header col-sm-12\">\n                        <h4>Conversation Title</h4>\n                        <div className=\"header-button\">\n                            <a className=\"btn pull-right info-btn\">\n                                <i className=\"fa fa-info-circle fa-lg\"></i>\n                            </a>\n                        </div>\n                    </div>\n                </div>\n                <MessageList \n                  messageList={this.state.messageList}\n                  getMessage={this.getMessage}\n                />\n                <SendMessage \n                  sendMessage={this.sendMsg}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React, { Component } from \"react\";\nimport \"./log.css\";\nimport axios from 'axios';\nimport urlFor from './../../helpers/urlFor';\nimport Flash from './../../lib/Flash';\nimport './../home/index.css'\nimport auth from \"./../../authguard/auth\";\n\nclass login extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tif(auth.isAuthenticated()){\n\t\t\tthis.props.history.push(\"/home\")\n\t\t}\n\t\tthis.state = {\n\t\t\t\t\t\tusername: '',\n\t\t\t\t\t\tpassword:'',\n\t\t\t\t\t\tconfirm_pwd:'',\n\t\t\t\t\t\tname:'',\n\t\t\t\t\t\tusernameLogin:'',\n\t\t\t\t\t\tpasswordLogin:'',\n\t\t\t\t\t\terror:''\n\t\t\t\t\t};\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\n\t\tthis.handleChange = this.handleChange.bind(this);\n\t\tthis.handleLoginSubmit = this.handleLoginSubmit.bind(this);\n\t}\n\t\n\thandleSubmit(e) {\n\t\te.preventDefault();\n\t\taxios\n        .post(\n          urlFor(\"Register/\"),\n           this.state,\n        )\n        .then(res => {\n\t\t\talert('Successfully Logged in');\n\t\t})\n\t\t.catch(res=>{\n\t\t\tconsole.log(res.response)\n\t\t\tthis.setState({ error: 'Something went wrong' });\n\t\t});\t\t\n\t}\n\t\n\thandleChange(event) {\n\t\tlet obj={}\n\t\tobj[event.currentTarget.name]=event.currentTarget.value;\n\t\tthis.setState(obj);\n\t}\n\n\n\thandleLoginSubmit(e) {\n\t\te.preventDefault();\n\t\taxios\n        .post(\n          urlFor(\"Login/\"),\n           {\"username\":this.state.usernameLogin,\"password\":this.state.passwordLogin},\n        )\n        .then(res => {\n\t\t\tconsole.log(res)\n\t\t\tauth.login(() => {\n\t\t\t\tthis.props.history.push(\"/home\");\n\t\t\t  },res.data.token);\n\t\t})\n\t\t.catch(res=>{\n\t\t\tthis.setState({ error:res.response.data.message });\n\t\t});\t\t\n\t}\n\n\t\n\topenRegisterForm(event){\n\t\tdocument.getElementById(\"register-form\").style.display=\"block\";\n\t\tdocument.getElementById(\"login-form\").style.display=\"none\";\n\t\tdocument.getElementById(\"login-form-link\").classList.remove('active');\n\t\tevent.currentTarget.classList.add('active');\n\t\tevent.preventDefault();\n\t}\n\n\topenLoginForm(event){\n\t\tdocument.getElementById(\"register-form\").style.display=\"none\";\n\t\tdocument.getElementById(\"login-form\").style.display=\"block\"; \n\t\tdocument.getElementById(\"register-form-link\").classList.remove('active');\n\t\tevent.currentTarget.classList.add('active');\n\t\tevent.preventDefault();\n\t}\n\n\tfirstMethod(e) {\n\t\tconst re = /[0-9]+/g;\n\t\tif (!re.test(e.key)) {\n\t\te.preventDefault();\n\t\t}\n\t}\n\n\tsecondMethod(e) {\n\t\tconst re = /[a-zA-Z ]+/g;\n\t\tif (!re.test(e.key)) {\n\t\te.preventDefault();\n\t\t}\n\t}\n\n\tresetError = () => {\n\t\tthis.setState({ error: '' });\n\t  }\n\t\n \t\n\trender() {\n\t\tconst { error } = this.state;\n\n\treturn (\n      <div style={{marginTop:100}}>\n\t   {error && <Flash error={error} resetError={this.resetError} />}\n       <div className=\"container\">\n    \t<div className=\"row\">\n\t\t\t<div className=\"col-md-6 col-md-offset-3\">\n\t\t\t\t<div className=\"panel panel-login\">\n\t\t\t\t\t<div className=\"panel-heading\">\n\t\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t\t<div className=\"col-xs-6\">\n\t\t\t\t\t\t\t\t<a href=\"#\" onClick={(e) => this.openLoginForm(e)} className=\"active\" id=\"login-form-link\">Login</a>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"col-xs-6\">\n\t\t\t\t\t\t\t\t<a href=\"#\" onClick={(e) => this.openRegisterForm(e)} id=\"register-form-link\">Register</a>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<hr />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"panel-body\">\n\t\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t\t<div className=\"col-lg-12\">\n\t\t\t\t\t\t\t\t<form id=\"login-form\" role=\"form\" style={{\"display\": \"block\"}}>\n\t\t\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t\t\t<input type=\"text\" name=\"usernameLogin\" id=\"usernameLogin\" value={this.state.usernameLogin} placeholder=\"Mobile Number\" className=\"form-control\" ref=\"first\" onKeyPress={(e) => this.firstMethod(e)} maxLength=\"10\" pattern=\"\\d{10}\" onChange={this.handleChange} />\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t\t<input type=\"password\" name=\"passwordLogin\" id=\"passwordLogin\" value={this.state.passwordLogin} className=\"form-control\" placeholder=\"Password\" onChange={this.handleChange}/>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-sm-6 col-sm-offset-3\">\n\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"submit\" name=\"login-submit\" id=\"login-submit\" className=\"form-control btn btn-login\" onChange={this.handleChange} value=\"Log In\" onClick={this.handleLoginSubmit}/>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<form id=\"register-form\" style={{\"display\": \"none\"}}>\n\t\t\t\t\t\t\t\t\t<div className=\"form-group\" onSubmit={this.handleSubmit}>\n\t\t\t\t\t\t\t\t\t\t<input type=\"text\" name=\"username\" id=\"usernname\" value={this.state.username} className=\"form-control\" placeholder=\"Mobile Number\" ref=\"first\" onKeyPress={(e) => this.firstMethod(e)} maxLength=\"10\" pattern=\"\\d{10}\" onChange={this.handleChange}/>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t\t\t<input type=\"text\" name=\"name\" value={this.state.name} id=\"name\" className=\"form-control\" placeholder=\"Name\" ref=\"second\" onKeyPress={(e) => this.secondMethod(e)} onChange={this.handleChange}/>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t\t\t<input type=\"password\" name=\"password\" id=\"password\" value={this.state.password} className=\"form-control\" placeholder=\"Password\" onChange={this.handleChange}/>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t\t\t<input type=\"password\" name=\"confirm_pwd\" id=\"confirm_pwd\" value={this.state.confirm_pwd} className=\"form-control\" placeholder=\"Confirm Password\" onChange={this.handleChange}/>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-sm-6 col-sm-offset-3\">\n\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"submit\" name=\"register-submit\" id=\"register-submit\" className=\"form-control btn btn-register\" value=\"Register Now\" onClick={this.handleSubmit} onChange={this.handleChange}/>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n\n    </div>\n    );\n  }\n}\n\nexport default login;\n\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Switch, Route, BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { ProtectedRoute } from \"./authguard/protected.route\";\nimport home from \"./components/home\";\nimport login from \"./components/login/login\"\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Switch>\n        <Route exact path=\"/\" component={login} />\n        <ProtectedRoute  path=\"/home\" component={home} />\n        <Route path=\"*\" component={() => \"404 NOT FOUND\"} />\n      </Switch>\n    </div>\n  );\n}\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  rootElement\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}